% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event_file_gen.R
\name{basic_event_df}
\alias{basic_event_df}
\title{Generate an events file for a dyad}
\usage{
basic_event_df(
  n,
  actors,
  a1_action = "bayesact_optimal",
  a2_action = "bayesact_optimal",
  a1_emotion = "none",
  a2_emotion = "none",
  noise = "none",
  act_simultaneously = FALSE,
  perspective_shift = TRUE,
  switch_actor_after = 1
)
}
\arguments{
\item{n}{numeric; number of turns}

\item{actors}{string vector of length 2; names of agents a1 and a2}

\item{a1_action}{string; one of "bayesact_optimal", "interact_optimal", or an action from the dictionary. Default "bayesact_optimal".}

\item{a2_action}{string; one of "bayesact_optimal", "interact_optimal", or an action from the dictionary. Default "bayesact_optimal".}

\item{a1_emotion}{string; one of "none", "bayesact_optimal", "interact_optimal", or a modifier from the modifier dictionary. Default "none".}

\item{a2_emotion}{string; one of "none", "bayesact_optimal", "interact_optimal", or a modifier from the modifier dictionary. Default "none".}

\item{noise}{string vector listing all the places where noise is desired. Options are "none" (default), "a1_action", "a1_emotion", "a2_action", "a2_emotion"}

\item{act_simultaneously}{boolean whether the actors should act at the same time. Default FALSE--in this case, they will instead take turns.}

\item{perspective_shift}{boolean; whether to switch which actor is the agent/client when the turn switches. If true, the "perspective" of bayesact is always from the agent's point of view. If false, the perspective is always from one actor's point of view.}

\item{switch_actor_after}{numeric; how many actions each actor should take before switching. Default 1. If act_simultaneously is TRUE, this is ignored.}
}
\value{
dataframe listing events
}
\description{
This function constructs an events dataframe in the proper format for inputting to write_input_from_df.
It constructs basic dataframes only. It is limited to two actors who must act in patterned ways and only
perform one type of action throughout the interaction (this can be the optimal action as calculated by
bayesact or interact or it can be an action from the behaviors dictionary).
}
\details{
It is possible to simulate interaction in larger network structures and with more complex patterns of action.
Dataframes created by this function may be useful as templates for creating the more complicated events
files needed for this.
}
